#!/usr/bin/env ruby

# hookit is installed as a bundled app, so we need bundler to load it for us
$:.unshift  '/opt/gonano/hookit/vendor/bundle'
require 'bundler/setup'

# load hookit/setup to bootstrap hookit and import the dsl
require 'hookit/setup'

local_pulse_md5 = execute "local pulse md5" do
  command "cat /var/nanobox/pulse.md5"
  not_if { ! ::File.exists? "/var/nanobox/pulse.md5" }
end

aws_pulse_md5 = execute "aws pulse md5" do
  command <<-END 
    bash -c 'curl \
      -f \
      -k \
      https://d3ep67zochz54j.cloudfront.net/pulse/linux/amd64/pulse.md5 \
        | tee /var/nanobox/pulse.md5'
  END
end

if local_pulse_md5 != aws_pulse_md5
  # Stop pulse
  service 'pulse' do
    action :disable
    not_if { !Dir.exist?('/etc/service/pulse') }
  end

  execute "Download pulse" do
    command <<-END 
      bash -c 'curl \
        -f \
        -k \
        -o /usr/local/bin/pulse
        https://d3ep67zochz54j.cloudfront.net/pulse/linux/amd64/pulse'
    END
  end

  execute "Chmod pulse" do
    command <<-END 
      bash -c 'chmod 755 /usr/local/bin/pulse'
    END
  end

  service 'pulse' do
    action :enable
    not_if { !Dir.exist?('/etc/service/pulse') }
  end
end

local_hooks_md5 = execute "local hooks md5" do
  command "cat /var/nanobox/hooks.md5"
  not_if { ! ::File.exists? "/var/nanobox/hooks.md5" }
end

aws_hooks_md5 = execute "aws hooks md5" do
  command <<-END
    bash -c 'curl \
      -f \
      -k \
      https://d1ormdui8qdvue.cloudfront.net/hooks/pulse-stable.md5 \
        | tee /var/nanobox/hooks.md5'
  END
end

if local_hooks_md5 != aws_hooks_md5
  execute "update hooks" do
    command <<-END
      bash -c 'curl \
          -f \
          -k \
          https://d1ormdui8qdvue.cloudfront.net/hooks/pulse-stable.tgz \
            | tar -xz -C /opt/nanobox/hooks'
    END
  end
end
